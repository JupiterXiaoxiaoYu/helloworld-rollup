# Build stage
FROM rustlang/rust:nightly-bullseye as builder

# 添加构建参数
ARG DEPLOY
ARG USER_PRIVATE_ACCOUNT
ARG USER_ADDRESS
ARG SETTLEMENT_CONTRACT_ADDRESS
ARG RPC_PROVIDER
ARG SETTLER_PRIVATE_ACCOUNT
ARG SERVER_ADMIN_KEY
ARG PORT
ARG AUTO_SUBMIT

# 在构建阶段打印参数（构建日志中可见）
RUN echo "Build arguments in builder stage:" && \
    echo "DEPLOY=${DEPLOY}" && \
    echo "USER_ADDRESS=${USER_ADDRESS}" && \
    echo "SETTLEMENT_CONTRACT_ADDRESS=${SETTLEMENT_CONTRACT_ADDRESS}" && \
    echo "RPC_PROVIDER=${RPC_PROVIDER}" && \
    echo "PORT=${PORT}" && \
    echo "AUTO_SUBMIT=${AUTO_SUBMIT}"
    # 不打印敏感信息

# Install build dependencies and Node.js 18
RUN apt-get update && apt-get install -y \
    curl \
    build-essential \
    pkg-config \
    git \
    binaryen \
    && curl -fsSL https://deb.nodesource.com/setup_18.x | bash - \
    && apt-get install -y nodejs \
    && rm -rf /var/lib/apt/lists/*

# Install wasm-pack
RUN curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh

WORKDIR /app

# Copy only necessary files for dependency installation
COPY Cargo.toml Cargo.lock rust-toolchain ./
COPY ts/package*.json ts/
COPY ts/tsconfig.json ts/

# Create dummy source files to cache dependencies
RUN mkdir src && echo "fn main() {}" > src/lib.rs
# Add retry mechanism and clean npm cache before install
RUN cd ts && \
    npm cache clean --force && \
    for i in {1..3}; do \
      npm ci && break || \
      if [ $i -lt 3 ]; then \
        echo "Retry $i..." && \
        sleep 5; \
      else \
        exit 1; \
      fi \
    done

# Copy actual source code
COPY . .

# Build the application and generate MD5
RUN make build && \
    mkdir -p /wasm && \
    md5sum ts/node_modules/zkwasm-ts-server/src/application/application_bg.wasm | \
    awk '{ print $1 }' | tr 'a-z' 'A-Z' > /wasm/wasm.md5

# Production stage
FROM node:18-slim

# 重新声明 ARG，这在多阶段构建中是必需的
ARG DEPLOY
ARG USER_PRIVATE_ACCOUNT
ARG USER_ADDRESS
ARG SETTLEMENT_CONTRACT_ADDRESS
ARG RPC_PROVIDER
ARG SETTLER_PRIVATE_ACCOUNT
ARG SERVER_ADMIN_KEY
ARG PORT
ARG AUTO_SUBMIT

# 设置环境变量
ENV DEPLOY="${DEPLOY}"
ENV USER_PRIVATE_ACCOUNT="${USER_PRIVATE_ACCOUNT}"
ENV USER_ADDRESS="${USER_ADDRESS}"
ENV SETTLEMENT_CONTRACT_ADDRESS="${SETTLEMENT_CONTRACT_ADDRESS}"
ENV RPC_PROVIDER="${RPC_PROVIDER}"
ENV SETTLER_PRIVATE_ACCOUNT="${SETTLER_PRIVATE_ACCOUNT}"
ENV SERVER_ADMIN_KEY="${SERVER_ADMIN_KEY}"
ENV PORT="${PORT}"
ENV AUTO_SUBMIT="${AUTO_SUBMIT}"

# 添加调试信息
RUN echo "Verifying environment variables:" && \
    echo "DEPLOY=${DEPLOY}" && \
    echo "USER_ADDRESS=${USER_ADDRESS}" && \
    echo "PORT=${PORT}" && \
    echo "AUTO_SUBMIT=${AUTO_SUBMIT}"

WORKDIR /app

# Copy only necessary files from builder
COPY --from=builder /app/ts ./ts
COPY --from=builder /app/src/admin.pubkey ./src/admin.pubkey
COPY --from=builder /wasm/wasm.md5 ./wasm.md5

# Create user first
RUN groupadd -r appuser && useradd -r -g appuser appuser

# Set correct permissions
RUN chmod +x ts/publish.sh && \
    chown -R appuser:appuser /app && \
    chmod -R u+rw /app

# Switch to non-root user
USER appuser

EXPOSE 3000
CMD ["node", "./ts/src/service.js"]
